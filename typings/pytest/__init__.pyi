from typing import Any, Callable, Type

def fixture(func: Callable[..., Any]) -> Callable[..., Any]: ...

class raises:
    def __init__(self, exc: Type[BaseException]): ...
    def __enter__(self) -> None: ...
    def __exit__(self, exc_type: Type[BaseException] | None, exc: BaseException | None, tb: Any) -> bool: ...

class mark:
    @staticmethod
    def parametrize(argnames: str, argvalues: list[tuple[Any, ...]]) -> Callable[[Callable[..., Any]], Callable[..., Any]]: ...
